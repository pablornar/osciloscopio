#include <UTFT.h>
#include <URTouch.h>
#include <UTFT_Buttons.h>

#define oh_h=0xE43;


//+++++++++++++++++++++variables de display
extern uint8_t SmallFont[];
extern uint8_t BigFont[];
extern uint8_t SevenSegNumFont[];
extern uint8_t Dingbats1_XL[];
short ResH=320;
short ResV=240;
_current_font a;

//++++++++++++++++++++++++++++Variables de FFT y FFT-1
const int tabcoseno[362] = { 1000, 999, 999, 998, 997, 996, 994, 992, 990, 987, 984, 981, 978, 974, 970, 965, 961, 956, 951, 945, 939, 933, 927, 920, 913, 906, 898, 891, 882, 874, 866,
                             857, 848, 838, 829, 819, 809, 798, 788, 777, 766, 754, 743, 731, 719, 707, 694, 681, 669, 656, 642, 629, 615, 601, 587, 573, 559, 544, 529, 515, 500,
                             484, 469, 453, 438, 422, 406, 390, 374, 358, 342, 325, 309, 292, 275, 258, 241, 224, 207, 190, 173, 156, 139, 121, 104, 87, 69, 52, 34, 17, 0,
                             -17, -34, -52, -69, -87, -104, -121, -139, -156, -173, -190, -207, -224, -241, -258, -275, -292, -309, -325, -342, -358, -374, -390, -406, -422, -438, -453, -469, -484,-500,
                             -515, -529, -544, -559, -573, -587, -601, -615, -629, -642, -656, -669, -681, -694, -701, -719, -731, -743, -754, -766, -777, -788, -798, -809, -819, -829, -838, -848, -857,-866,
                             -874, -882, -891, -898, -906, -913, -920, -927, -933, -939, -945, -951, -956, -961, -965, -970, -974, -978, -981, -984, -987, -990, -992, -994, -996, -997, -998, -999, -999,-1000,
                             -999, -999, -998, -997, -996, -994, -992, -990, -987, -984, -981, -978, -974, -970, -965, -961, -956, -951, -945, -939, -933, -927, -920, -913, -906, -898, -891, -882, -874, -866,
                             -857, -848, -838, -829, -819, -809, -798, -788, -777, -766, -754, -743, -731, -719, -701, -694, -681, -669, -656, -642, -629, -615, -601, -587, -573, -559, -544, -529, -515, -500,
                             -484, -469, -453, -438, -422, -406, -390, -374, -358, -342, -325, -309, -292, -275, -258, -241, -224, -207, -190, -173, -156, -139, -121, -104, -87, -69, -52, -34, -17,0,
                              17, 34, 52, 69, 87, 104, 121, 139, 156, 173, 190, 207, 224, 241, 258, 275, 292, 309, 325, 342, 358, 374, 390, 406, 422, 438, 453, 469, 484,500,
                              515, 529, 544, 559, 573, 587, 601, 615, 629, 642, 656, 669, 681, 694, 701, 719, 731, 743, 754, 766, 777, 788, 798, 809, 819, 829, 838, 848, 857,866,
                              874, 882, 891, 898, 906, 913, 920, 927, 933, 939, 945, 951, 956, 961, 965, 970, 974, 978, 981, 984, 987, 990, 992, 994, 996, 997, 998, 999, 999,1000,
                           }; //para diez valores de

const int tabseno[362] = { 0, 17, 34, 52, 69, 87, 104, 121, 139, 156, 173, 190, 207, 224, 241, 258, 275, 292, 309, 325, 342, 358, 374, 390, 406, 422, 438, 453, 469, 484,500,
                           515, 529, 544, 559, 573, 587, 601, 615, 629, 642, 656, 669, 681, 694, 701, 719, 731, 743, 754, 766, 777, 788, 798, 809, 819, 829, 838, 848, 857, 866,
                           874, 882, 891, 898, 906, 913, 920, 927, 933, 939, 945, 951, 956, 961, 965, 970, 974, 978, 981, 984, 987, 990, 992, 994, 996, 997, 998, 999, 999,1000,
                           999, 999, 998, 997, 996, 994, 992, 990, 987, 984, 981, 978, 974, 970, 965, 961, 956, 951, 945, 939, 933, 927, 920, 913, 906, 898, 891, 882, 874, 866,
                           857, 848, 838, 829, 819, 809, 798, 788, 777, 766, 754, 743, 731, 719, 707, 694, 681, 669, 656, 642, 629, 615, 601, 587, 573, 559, 544, 529, 515, 500,
                           484, 469, 453, 438, 422, 406, 390, 374, 358, 342, 325, 309, 292, 275, 258, 241, 224, 207, 190, 173, 156, 139, 121, 104, 87, 69, 52, 34, 17, 0,
                           -17, -34, -52, -69, -87, -104, -121, -139, -156, -173, -190, -207, -224, -241, -258, -275, -292, -309, -325, -342, -358, -374, -390, -406, -422, -438, -453, -469, -484,-500,
                           -515, -529, -544, -559, -573, -587, -601, -615, -629, -642, -656, -669, -681, -694, -701, -719, -731, -743, -754, -766, -777, -788, -798, -809, -819, -829, -838, -848, -857,-866,
                           -874, -882, -891, -898, -906, -913, -920, -927, -933, -939, -945, -951, -956, -961, -965, -970, -974, -978, -981, -984, -987, -990, -992, -994, -996, -997, -998, -999, -999,-1000,
                           -999, -999, -998, -997, -996, -994, -992, -990, -987, -984, -981, -978, -974, -970, -965, -961, -956, -951, -945, -939, -933, -927, -920, -913, -906, -898, -891, -882, -874, -866,
                           -857, -848, -838, -829, -819, -809, -798, -788, -777, -766, -754, -743, -731, -719, -701, -694, -681, -669, -656, -642, -629, -615, -601, -587, -573, -559, -544, -529, -515, -500,
                           -484, -469, -453, -438, -422, -406, -390, -374, -358, -342, -325, -309, -292, -275, -258, -241, -224, -207, -190, -173, -156, -139, -121, -104, -87, -69, -52, -34, -17,0,
                         }; //para diez valores de

//***********************vector del filtro fir pasabanda de banda de paso 6500 a 7000 con banda de transicion de 1khz a cada lado
const double tabsinc[362] = {1, 0.999499,  0.997997,  0.995496,  0.992002,  0.987520,  0.982059,  0.975628,  0.968238,  0.959904,  0.950640,  0.940463,  0.929391,  0.917444,  0.904643,  0.891010,  0.876572,  0.861352,  0.845378,  0.828678,  0.811282,  0.793221,  0.774525,  0.755229,  0.735365,  0.714968,  0.694074,  0.672719,  0.650940,  0.628773,  
                      0.606257, 0.583431,  0.560332,  0.537000,  0.513474,  0.489793,  0.465996,  0.442123,  0.418213,  0.394303,  0.370434,  0.346643,  0.322968,  0.299445,  0.276113,  0.253005,  0.230159,  0.207608,  0.185385,  0.163524,  0.142055,  0.121009,  0.100417,  0.080305,  0.060701,  0.041631,  0.023119,  0.005189,  -0.012139, -0.028843, 
                     -0.044905, -0.060308, -0.075036, -0.089074, -0.102410, -0.115033, -0.126932, -0.138101, -0.148532, -0.158220, -0.167163, -0.175359, -0.182808, -0.189510, -0.195469, -0.200690, -0.205178, -0.208941, -0.211987, -0.214328, -0.215973, -0.216937, -0.217233, -0.216877, -0.215885, -0.214275, -0.212067, -0.209279, -0.205932, -0.202049, 
                     -0.197651, -0.192762, -0.187407, -0.181610, -0.175395, -0.168790, -0.161821, -0.154514, -0.146896, -0.138996, -0.130839, -0.122455, -0.113871, -0.105114, -0.096213, -0.087195, -0.078088, -0.068918, -0.059713, -0.050499, -0.041302, -0.032148, -0.023061, -0.014067, -0.005188, 0.003551,  0.012130,  0.020525,  0.028717,  0.036686,  
                      0.044413,  0.051879,  0.059069,  0.065965,  0.072554,  0.078820,  0.084753,  0.090339,  0.095568,  0.100432,  0.104921,  0.109028,  0.112748,  0.116076,  0.119008,  0.121541,  0.123675,  0.125408,  0.126742,  0.127678,  0.128220,  0.128372,  0.128139,  0.127526,  0.126541,  0.125192,  0.123488,  0.121439,  0.119054,  0.116346,  
                      0.113327,  0.110010,  0.106407,  0.102534,  0.098405,  0.094036,  0.089441,  0.084639,  0.079644,  0.074474,  0.069146,  0.063678,  0.058087,  0.052391,  0.046608,  0.040756,  0.034853,  0.028916,  0.022964,  0.017014,  0.011082,  0.005187,  -0.000655, -0.006428, -0.012115, -0.017700, -0.023170, -0.028508, -0.033701, -0.038736, 
                     -0.043599, -0.048277, -0.052760, -0.057037, -0.061096, -0.064928, -0.068526, -0.071880, -0.074983, -0.077830, -0.080414, -0.082730, -0.084775, -0.086545, -0.088038, -0.089253, -0.090188, -0.090844, -0.091222, -0.091323, -0.091150, -0.090706, -0.089995, -0.089022, -0.087793, -0.086312, -0.084588, -0.082628, -0.080439, -0.078031, 
                     -0.075412, -0.072592, -0.069582, -0.066392, -0.063033, -0.059517, -0.055855, -0.052060, -0.048144, -0.044120, -0.040000, -0.035798, -0.031526, -0.027199, -0.022829, -0.018429, -0.014013, -0.009594, -0.005185, -0.000800, 0.003550,  0.007852,  0.012094,  0.016262,  0.020346,  0.024335,  0.028217,  0.031982,  0.035619,  0.039120,  
                      0.042474,  0.045673,  0.048709,  0.051574,  0.054262,  0.056765,  0.059078,  0.061195,  0.063112,  0.064824,  0.066329,  0.067623,  0.068705,  0.069572,  0.070224,  0.070661,  0.070883,  0.070891,  0.070686,  0.070272,  0.069650,  0.068824,  0.067799,  0.066579,  0.065168,  0.063573,  0.061800,  0.059854,  0.057744,  0.055477,  
                      0.053061,  0.050503,  0.047813,  0.045000,  0.042072,  0.039040,  0.035912,  0.032700,  0.029413,  0.026061,  0.022655,  0.019206,  0.015723,  0.012219,  0.008702,  0.005183,  0.001674,  -0.001815, -0.005275, -0.008696, -0.012066, -0.015378, -0.018620, -0.021785, -0.024863, -0.027846, -0.030725, -0.033492, -0.036141, -0.038664, 
                     -0.041054, -0.043305, -0.045411, -0.047368, -0.049170, -0.050812, -0.052292, -0.053606, -0.054750, -0.055723, -0.056522, -0.057148, -0.057598, -0.057872, -0.057971, -0.057896, -0.057648, -0.057229, -0.056641, -0.055887, -0.054971, -0.053895, -0.052664, -0.051284, -0.049758, -0.048092, -0.046293, -0.044366, -0.042317, -0.040154, 
                     -0.037885, -0.035515, -0.033053, -0.030507, -0.027884, -0.025194, -0.022444, -0.019644, -0.016801, -0.013924, -0.011023, -0.008106, -0.005181, -0.002258, 0.000655,  0.003549,  0.006416,  0.009247,  0.012033,  0.014768,  0.017443,  0.020051,  0.022583,  0.025034,  0.027395,  0.029662,  0.031826,  0.033883,  0.035827,  0.037653,  
                      0.039356,                                                                                                                                                     
};


//++++++++++++++variables Globales
int xn[300];
int sallcd[400];
int sallcdprom[400];
int au;
int i;
int Tm=10;   // en microsegundos
int Gan=1;
int Fs;
int Nprom=250;
int bandtriger;
int leveltriger=2048;
int Pers=10;
int N=250;
double auhd1;
double auhd2;
int angvent;



//++++++++++++++++++Variables de botones
int ban,bana;
int but1, but2, but3, but4, but5, but6, but7,but8,but9,but10,but11,but12,but13, butY, pressed_button;
boolean default_colors = true;

//++++++++++++++++++++++Varialbles del FFT
int Xkr[200];
int Xki[200];
int Ck;
double Wxk;
int angWxk;
int angulox;
int auXkr;
int auXki;
int cosewxk;
int senowxk;
int f;
int seno;

//++++++++++++++++++++++Varialbles del SNR
double PRuido;
double SNR;
double SNRT;

//++++++++++++++++++++++Varialbles del filtro
int fpi=0;
int fpf=4000;
int fc=5000;
double Wpi;
double Wpf;
double Wc;
double AW;
int L;
int n;
int angulo;
int k;
int angsinc;
double sinc;
int coseno;
double hd[300];
int xnfd[300];
int xnf[300];
int r;
int auxnf;

//+++++++++++++Variables de interrupcion
int Fclock=84; //frecuencia de trabajo en MHZ
int Tretint=((Fclock/2)*Tm);
int bandint=0;
int intvalor;

//++++++++++++++++++++++Prototipo definicion de funciones
void extern INICIO(void);
void extern Menu(void);
void extern Muestreo(void);
void extern FIR(void);
void extern FFT(void);

UTFT myGLCD(ITDB32WD,38,39,40,41); //configura RS, WR, CS y rest
URTouch myTouch(43, 45, 47, 49, 51); //tclk, tcs, tdin, dout e irq
// Finally we set up UTFT_Buttons :)
UTFT_Buttons  myButtons(&myGLCD, &myTouch);

void setup() {
  INICIO();
  pinMode(A0,INPUT);
  Serial.begin(115200);
}

void loop() {
   Menu();
}

//manejo interrupciones
void TC0_Handler(){
 intvalor=REG_TC0_SR0;
 //while((REG_ADC_ISR & 0b00000000000000000000000010000000) == 0); // wait for conversion del canal 7
 xn[i]=(ADC->ADC_CDR[7]);
 //xn[i]= ((xn[i]*33)/4095);
 i=i+1;
 if (i > N){
  REG_TC0_CCR0=0b00000000000000000000000000000010;    // stop counter
  i=0;
  bandint=1;
 }
 //REG_TC0_RC0=0b00000000000000000000000000000000;    // Registro RC0 lo pongo en 0 para empezar a contar
}
